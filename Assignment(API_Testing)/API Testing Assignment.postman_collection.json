{
	"info": {
		"_postman_id": "c3c613d8-ee7f-46c4-a27b-ef276b89c37f",
		"name": "API Testing Assignment",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "47634774",
		"_collection_link": "https://sakinahbatoolkanani-9731633.postman.co/workspace/8dabbc51-e3cf-4d4a-85ce-2f62b945c10f/collection/47634774-c3c613d8-ee7f-46c4-a27b-ef276b89c37f?action=share&source=collection_link&creator=47634774"
	},
	"item": [
		{
			"name": "GET post",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							"pm.collectionVariables.set(\"randomTitle\", \"Title_\" + Math.random().toString(36).substring(2));\r",
							"pm.collectionVariables.set(\"randomBody\", \"Body_\" + Date.now());\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"let resp = pm.response.json();\r",
							"\r",
							"\r",
							"console.log(\"Title from response â†’ \", resp.title);\r",
							"\r",
							"\r",
							"pm.test(\"Check Title is present\", function () {\r",
							"    pm.expect(resp.title).to.not.be.empty;\r",
							"});\r",
							"\r",
							"pm.test(\"Deliberate failure\", function () {\r",
							"    pm.expect(resp.userId).to.eql(9999);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/posts/1",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"posts",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST create post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parse the response\r",
							"let resp = pm.response.json();\r",
							"\r",
							"// Set the id for use in next request\r",
							"pm.collectionVariables.set(\"createdPostId\", 1);\r",
							"\r",
							"\r",
							"// Assertion\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"{{randomTitle}}\",\r\n  \"body\": \"{{randomBody}}\",\r\n  \"userId\": 1\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/posts",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT update post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 1,\r\n  \"title\": \"{{randomTitle}}\",\r\n  \"body\": \"{{randomBody}}\",\r\n  \"userId\": 1\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/posts/1",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"posts",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "PATCH update post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"{{randomTitle}}\"\r\n}\r\n"
				},
				"url": {
					"raw": "{{baseUrl}}/posts/1",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"posts",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/posts/1",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"posts",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET created post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let data = pm.response.json();\r",
							"pm.test(\"ID matches\", function () {\r",
							"    pm.expect(data.id).to.eql(Number(pm.collectionVariables.get(\"createdPostId\")));\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/posts/{{createdPostId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"posts",
						"{{createdPostId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT created post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resp = pm.response.json();\r",
							"\r",
							"\r",
							"pm.test(\"ID matches\", function () {\r",
							"    pm.expect(resp.id).to.eql(Number(pm.collectionVariables.get(\"createdPostId\")));\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"{{randomTitle}}\",\r\n  \"body\": \"{{randomBody}}\",\r\n  \"userId\": 1\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/posts/{{createdPostId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"posts",
						"{{createdPostId}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://jsonplaceholder.typicode.com/"
		},
		{
			"key": "randomTitle",
			"value": ""
		},
		{
			"key": "randomBody",
			"value": ""
		},
		{
			"key": "createdPostId",
			"value": ""
		}
	]
}